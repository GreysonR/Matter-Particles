var Engine=Matter.Engine,Render=Matter.Render,Runner=Matter.Runner,Composites=Matter.Composites,Composite=Matter.Composite,Common=Matter.Common,World=Matter.World,Bodies=Matter.Bodies,Grid=Matter.Grid,MouseConstraint=Matter.MouseConstraint,Mouse=Matter.Mouse,Body=Matter.Body,Events=Matter.Events,vw=window.innerWidth/100,vh=window.innerHeight/100,numParticles=0,particlesAdded=0,Particle={defaults:{colors:["#FE601C","#EBDB14","#EB471F","#ED7A0E"],collisions:!1,isStatic:!1,x:window.innerWidth/2,y:window.innerHeight/2,size:{min:.5,max:2},amount:50,interval:0,velocity:{x:5,y:5,direction:{x:"none",y:"none"}},delay:400,frictionAir:.02,parent:void 0,collisionFilter:void 0},engine:{defaults:{canvas:void 0,width:window.innerWidth,height:window.innerHeight,background:"transparent",wireframes:!1,showBroadphase:!1},create(){window.engine=Engine.create(),window.world=engine.world,engine.timing.timeScale=1;let defaults=Particle.engine.defaults;null==defaults.canvas?window.render=Render.create({element:document.body,engine:engine,options:{width:defaults.width,height:defaults.height,background:defaults.background,wireframes:defaults.wireframes,showBroadphase:defaults.broadphase}}):window.render=Render.create({canvas:defaults.canvas,engine:engine,options:{width:defaults.width,height:defaults.height,background:defaults.background,wireframes:defaults.wireframes,showBroadphase:defaults.broadphase}}),engine.world.gravity.y=0,Render.run(render),window.runner=Runner.create(),Runner.run(runner,engine)},createMouse(){window.mouse=Mouse.create(render.canvas),window.mouseConstraint=MouseConstraint.create(engine,{mouse:mouse,constraint:{stiffness:.1,render:{visible:!1}}}),World.add(world,mouseConstraint),render.mouse=mouse}},emitter:{random:(min,max)=>(null==min&&null==max?(min=0,max=1):null==max&&(max=min,min=0),Math.random()*(max-min)+min),create(x,y,options){let defaults=Particle.defaults;null==options&&(options=defaults),null==options.collisions&&(options.collisions=defaults.collisions),null==options.isStatic&&(options.isStatic=defaults.isStatic),null==options.size?options.size=defaults.size:"number"==typeof options.size&&(options.size={min:options.size,max:options.size}),null==options.amount&&(options.amount=defaults.amount),null==options.interval&&(options.interval=defaults.interval),null==options.velocity&&(options.velocity=defaults.velocity),null==options.velocity.direction?options.velocity.direction=defaults.velocity.direction:null==options.velocity.direction.x?options.velocity.direction.x=defaults.velocity.direction.x:null==options.velocity.direction.y&&(options.velocity.direction.y=defaults.velocity.direction.y),null==options.colors?options.colors=defaults.colors:"string"==typeof options.colors&&(options.colors=[options.colors]),null==options.delay&&(options.delay=defaults.delay),null==options.frictionAir&&(options.frictionAir=defaults.frictionAir),null==options.parent&&(options.parent=defaults.parent),null==options.collisionFilter&&(options.collisionFilter=defaults.collisionFilter),options.collisions=!options.collisions,null==x&&(x=defaults.x),null==y&&(y=defaults.y);let dir=options.velocity.direction;"string"==typeof dir.y&&(dir.y=dir.y.toLowerCase(),"up"==dir.y?options.velocity.direction.y=-1:"down"==dir.y?options.velocity.direction.y=1:"none"==dir.y&&(options.velocity.direction.y=0)),"string"==typeof dir.x&&(dir.x=dir.x.toLowerCase(),"left"==dir.x?options.velocity.direction.x=-1:"right"==dir.x?options.velocity.direction.x=1:"none"==dir.x&&(options.velocity.direction.x=0));let finalEmitter={pos:{x:x,y:y},options:options,running:!1,stop:function(){let e=this,amount=this.options.amount;this.options.amount=0,requestAnimationFrame(function(){requestAnimationFrame(function(){e.options.amount=amount})})},start:function(){Particle.emitter.explode(this)}};return finalEmitter.explode=finalEmitter.start,finalEmitter},explode(emitter){var random=Particle.emitter.random;function addParticle(){let pos=emitter.pos,pSize=emitter.options.size,colors=emitter.options.colors,vel=emitter.options.velocity,number=emitter.options.amount,interval=emitter.options.interval,interactive=emitter.options.collisions,frictionAir=emitter.options.frictionAir,direction=emitter.options.velocity.direction,collisionFilter=emitter.options.collisionFilter;if(numParticles++,particlesAdded++,null!=emitter.options.parent){let parent=emitter.options.parent;if(pos=parent.position,emitter.pos=pos,"Circle Body"==parent.label){let angle=Math.random()*Math.PI*2,dist=Math.random()*parent.circleRadius;posX=dist*Math.cos(angle)+posX,posY=dist*Math.sin(angle)+posY}else"Rectangle Body"==parent.label&&(posX=Math.random()*(parent.bounds.max.x-parent.bounds.min.x)+parent.bounds.min.x,posY=Math.random()*(parent.bounds.max.y-parent.bounds.min.y)+parent.bounds.min.y)}let name="particle"+numParticles,size=random(pSize.min,pSize.max),color=colors[Math.round(random(colors.length))];color=null!=color?color:colors[0],window[name]=Bodies.circle(pos.x,pos.y,size,{isSensor:interactive,isParticle:!0,isStatic:emitter.options.isStatic,mass:0,frictionAir:frictionAir,render:{fillStyle:color}}),World.add(world,window[name]),null!=collisionFilter&&(window[name].collisionFilter=collisionFilter);let velX=random(0,vel.x),velY=random(0,vel.y);null==vel.y&&(velY=random(0,2)),null==vel.x&&(velX=random(0,2)),null==direction.x||0==direction.x?velX=Boolean(Math.round(random()))?velX:-1*velX:velX*=direction.x,null==direction.y||0==direction.y?velY=Boolean(Math.round(random()))?velY:-1*velY:velY*=direction.y;let velocity={x:velX,y:velY};Body.setVelocity(window[name],velocity),setTimeout(function(){function decreaseScale(){Body.scale(window[name],.9,.9),window[name].circleRadius>.1?requestAnimationFrame(decreaseScale):Composite.remove(world,window[name])}decreaseScale()},emitter.options.delay),particlesAdded<number&&(interval>0?setTimeout(addParticle,interval):addParticle())}particlesAdded=0,addParticle()}}};